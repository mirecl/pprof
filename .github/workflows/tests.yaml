# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  check:
    strategy:
      matrix:
        python: ['3.6','3.7','3.8','3.9']
        platform: [ubuntu-latest, macos-latest, windows-latest]
    
    runs-on: ${{ matrix.platform }}
    
    defaults:
      run:
        shell: bash
    
    steps:
      #----------------------------------------------
      #  check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      #----------------------------------------------
      #  configure poetry 
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      # install dependencies 
      #----------------------------------------------
      - name: Install dependencies
        run: poetry install --no-interaction
      #----------------------------------------------
      # run check style 
      #----------------------------------------------
      - name: flake8
        run: |
          source $VENV
          flake8 pprof/
      #----------------------------------------------
      # run tests
      #----------------------------------------------
      - name: pytest
        run: |
          source $VENV
          pytest
      #----------------------------------------------
      # upload coverage
      #----------------------------------------------
      - name: coverage     
        uses: codecov/codecov-action@v1
        if: matrix.python == '3.6' && matrix.platform == 'ubuntu-latest'
        with:
          token: ${{ secrets.CI_CODECOV }}  # Only required for private repositories
          file: ./coverage.xml
          fail_ci_if_error: true
